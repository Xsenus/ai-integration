# === Application ===
APP_ENV=development
APP_PORT=8000
LOG_LEVEL=info
ENABLE_DOCS=true

# === DaData API (заполните в .env локально) ===
DADATA_API_KEY=your_dadata_api_key
DADATA_SECRET_KEY=your_dadata_secret_key

# === Admin (bootstrap) creds — используются ТОЛЬКО для CREATE ROLE/DB основного сервера ===
# Если не хотите автосоздание роли/БД — оставьте пустыми, и создайте всё вручную.
PG_BOOTSTRAP_USER=postgres
PG_BOOTSTRAP_PASSWORD=change_me
PG_BOOTSTRAP_DB=postgres

# === Runtime Postgres (основной сервер / bitrix_data) ===
PG_HOST=127.0.0.1
PG_PORT=5432
PG_USER=dadata
PG_PASSWORD=change_me
PG_ADMIN_DB=postgres

# === Target DB (основная) ===
BITRIX_DB_NAME=bitrix_data
# Можно указать полный URL; если задан — перекрывает параметры выше:
# Формат: postgresql+asyncpg://USER:PASSWORD@HOST:PORT/DBNAME
BITRIX_DATABASE_URL=postgresql+asyncpg://dadata:change_me@127.0.0.1:5432/bitrix_data

# === Второе подключение: сервер с parsing_data (для записи в public.clients_requests) ===
# Вариант 1 — отдельными полями:
PARSING_PG_HOST=127.0.0.1
PARSING_PG_PORT=5432
PARSING_PG_USER=parsing
PARSING_PG_PASSWORD=change_me
PARSING_DB_NAME=parsing_data
# Вариант 2 — одним URL (перекрывает поля выше):
# PARSING_DATABASE_URL=postgresql+asyncpg://parsing:change_me@127.0.0.1:5432/parsing_data

# === SQLAlchemy / logging ===
ECHO_SQL=false

# === Performance / Cache ===
MAX_CONCURRENCY=5
ORG_TTL_HOURS=168
REQUEST_TIMEOUT=10

# === CORS ===
CORS_ALLOW_ORIGINS=*
CORS_ALLOW_METHODS=GET,POST,OPTIONS
CORS_ALLOW_HEADERS=Authorization,Content-Type
CORS_ALLOW_CREDENTIALS=false

# === Observability ===
METRICS_ENABLED=true
SENTRY_DSN=
REQUEST_LOG_SAMPLE_RATE=1.0

# === Misc ===
HEALTHCHECK_PATH=/health
